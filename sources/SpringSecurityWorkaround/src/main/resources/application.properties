
# this will override default user name and password spring security created
#spring.security.user.name=foo
#spring.security.user.password=bar

# Login with google
#spring.security.oauth2.client.registration.google.client-id = 1012922090575-e7vlq1cdtgdsmfotao3oqdg7c6oo5g85.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret = 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


# aws cognito
#spring.security.oauth2.client.registration.cognito.client-id = xxxxxxxxxxxxxxxxxxxx
#spring.security.oauth2.client.registration.cognito.client-secret = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#spring.security.oauth2.client.registration.cognito.scope = openid
#spring.security.oauth2.client.registration.cognito.redirect-uri = http://localhost:8080/login/oauth2/code/cognito
#spring.security.oauth2.client.registration.cognito.clientName = AWSCognitoSpringBootApp
#spring.security.oauth2.client.provider.cognito.issuerUri = https://cognito-idp.{region}.amazonaws.com/{Pool Id}
#spring.security.oauth2.client.provider.cognito.user-name-attribute = cognito:username

# aws credential
#aws.access-key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#aws.access-secret = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#aws.cognito.clientId= xxxxxxxxxxxxxxxxxxxxxxxxx
#aws.cognito.userPoolId= xxxxxxxxxxxxxxxx
#aws.cognito.region= xxxxxxx
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://cognito-idp.{region}.amazonaws.com/{Pool Id}